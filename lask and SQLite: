from flask import Flask, request, session, redirect, url_for, render_template, flash, send_from_directory
import os
import sqlite3
from werkzeug.utils import secure_filename

app = Flask(__name__)
app.secret_key = 'my_secret_key'
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['ALLOWED_EXTENSIONS'] = {'stl', 'obj'}

# Connect to the database
def get_db():
    if not hasattr(g, '_database'):
        g._database = sqlite3.connect('database.db')
    return g._database

# Initialize the database schema
def init_db():
    with app.app_context():
        db = get_db()
        with app.open_resource('schema.sql', mode='r') as f:
            db.cursor().executescript(f.read())
        db.commit()

# Check if a file has an allowed file extension
def allowed_file(filename):
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in app.config['ALLOWED_EXTENSIONS']

# Create a new user account
def create_user(username, password):
    db = get_db()
    db.execute('INSERT INTO users (username, password) VALUES (?, ?)',
               (username, password))
    db.commit()

# Authenticate a user
def authenticate_user(username, password):
    db = get_db()
    result = db.execute('SELECT id FROM users WHERE username = ? AND password = ?',
                        (username, password)).fetchone()
    return result is not None

# Save a file for a user
def save_file_for_user(user_id, file_path):
    db = get_db()
    db.execute('INSERT INTO files (user_id, file_path) VALUES (?, ?)',
               (user_id, file_path))
    db.commit()

# Get all files for a user
def get_files_for_user(user_id):
    db = get_db()
    files = db.execute('SELECT file_path FROM files WHERE user_id = ?',
                        (user_id,)).fetchall()
    return [file[0] for file in files]

# Home page
@app.route('/')
def home():
    if 'user_id' in session:
        user_id = session['user_id']
        files = get_files_for_user(user_id)
        return render_template('home.html', files=files)
    else:
        return render_template('login.html')

# Login page
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        if authenticate_user(username, password):
            session['user_id'] = username
            return redirect(url_for('home'))
        else:
            flash('Invalid username or password')
    return render_template('login.html')

# Logout
@app.route('/logout')
def logout():
    session.pop('user_id', None)
    return redirect(url_for('home'))

# Upload page
@app.route('/upload', methods=['GET', 'POST'])
def upload():
    if 'user_id' not in session:
        return redirect(url_for('login'))
    if request.method == 'POST':
        # Check if the post request has the file part
        if 'file' not in request.files:
            flash('No file part')
            return redirect(request.url)
        file = request.files['file']
        # If user does not select file, browser also
        # submit an empty part without filename
        if file.filename == '':
            flash('No selected file')
            return redirect(request.url)
        if file and allowed_file(file.filename):
                        # Save the file to disk
            filename = secure_filename(file.filename)
            file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            file.save(file_path)

            # Save the file path to the database
            user_id = session['user_id']
            save_file_for_user(user_id, file_path)

            flash('File uploaded successfully')
            return redirect(url_for('home'))
    return render_template('upload.html')

